import { User, Challenge, Submission } from '../types';

export const mockUsers: User[] = [
  {
    id: '1',
    username: 'CodeMaster',
    email: 'codemaster@example.com',
    score: 2450,
    rank: 1,
    solvedChallenges: 128,
    joinedAt: '2024-01-15',
  },
  {
    id: '2',
    username: 'AlgoQueen',
    email: 'algoqueen@example.com',
    score: 2380,
    rank: 2,
    solvedChallenges: 115,
    joinedAt: '2024-02-01',
  },
  {
    id: '3',
    username: 'DevNinja',
    email: 'devninja@example.com',
    score: 2200,
    rank: 3,
    solvedChallenges: 98,
    joinedAt: '2024-01-28',
  },
  {
    id: '4',
    username: 'ByteWarrior',
    email: 'bytewarrior@example.com',
    score: 2150,
    rank: 4,
    solvedChallenges: 89,
    joinedAt: '2024-02-12',
  },
  {
    id: '5',
    username: 'LogicLord',
    email: 'logiclord@example.com',
    score: 2080,
    rank: 5,
    solvedChallenges: 76,
    joinedAt: '2024-02-20',
  },
];

export const mockChallenges: Challenge[] = [
  {
    id: '1',
    title: 'Two Sum',
    description: 'Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.',
    difficulty: 'Easy',
    tags: ['Array', 'Hash Table'],
    likes: 1234,
    sampleInput: 'nums = [2,7,11,15], target = 9',
    sampleOutput: '[0,1]',
    constraints: '2 ≤ nums.length ≤ 10⁴\n-10⁹ ≤ nums[i] ≤ 10⁹\n-10⁹ ≤ target ≤ 10⁹',
    timeLimit: 1000,
    memoryLimit: 128,
    successRate: 85.2,
    totalSubmissions: 15623,
  },
  {
    id: '2',
    title: 'Valid Parentheses',
    description: 'Given a string s containing just the characters \'(\', \')\', \'{\', \'}\', \'[\' and \']\', determine if the input string is valid.',
    difficulty: 'Easy',
    tags: ['String', 'Stack'],
    likes: 987,
    sampleInput: 's = "()[]{}"',
    sampleOutput: 'true',
    constraints: '1 ≤ s.length ≤ 10⁴\ns consists of parentheses only \'()[]{}\'"',
    timeLimit: 1000,
    memoryLimit: 128,
    successRate: 78.9,
    totalSubmissions: 12456,
  },
  {
    id: '3',
    title: 'Longest Substring Without Repeating Characters',
    description: 'Given a string s, find the length of the longest substring without repeating characters.',
    difficulty: 'Medium',
    tags: ['Hash Table', 'String', 'Sliding Window'],
    likes: 2156,
    sampleInput: 's = "abcabcbb"',
    sampleOutput: '3',
    constraints: '0 ≤ s.length ≤ 5 * 10⁴\ns consists of English letters, digits, symbols and spaces.',
    timeLimit: 2000,
    memoryLimit: 256,
    successRate: 62.3,
    totalSubmissions: 18934,
  },
  {
    id: '4',
    title: 'Median of Two Sorted Arrays',
    description: 'Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.',
    difficulty: 'Hard',
    tags: ['Array', 'Binary Search', 'Divide and Conquer'],
    likes: 3421,
    sampleInput: 'nums1 = [1,3], nums2 = [2]',
    sampleOutput: '2.00000',
    constraints: 'nums1.length == m\nnums2.length == n\n0 ≤ m ≤ 1000\n0 ≤ n ≤ 1000',
    timeLimit: 3000,
    memoryLimit: 512,
    successRate: 34.7,
    totalSubmissions: 8967,
  },
  {
    id: '5',
    title: 'Binary Tree Level Order Traversal',
    description: 'Given the root of a binary tree, return the level order traversal of its nodes\' values.',
    difficulty: 'Medium',
    tags: ['Tree', 'Breadth-First Search'],
    likes: 1789,
    sampleInput: 'root = [3,9,20,null,null,15,7]',
    sampleOutput: '[[3],[9,20],[15,7]]',
    constraints: 'The number of nodes in the tree is in the range [0, 2000].\n-1000 ≤ Node.val ≤ 1000',
    timeLimit: 2000,
    memoryLimit: 256,
    successRate: 58.4,
    totalSubmissions: 11234,
  },
  {
    id: '6',
    title: 'Maximum Subarray',
    description: 'Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.',
    difficulty: 'Medium',
    tags: ['Array', 'Divide and Conquer', 'Dynamic Programming'],
    likes: 2567,
    sampleInput: 'nums = [-2,1,-3,4,-1,2,1,-5,4]',
    sampleOutput: '6',
    constraints: '1 ≤ nums.length ≤ 10⁵\n-10⁴ ≤ nums[i] ≤ 10⁴',
    timeLimit: 2000,
    memoryLimit: 256,
    successRate: 71.2,
    totalSubmissions: 16789,
  },
];

export const currentUser: User = {
  id: 'current',
  username: 'YourUsername',
  email: 'you@example.com',
  score: 1250,
  rank: 15,
  solvedChallenges: 42,
  joinedAt: '2024-03-01',
};

export const defaultCode = `public class Solution {
    public int[] twoSum(int[] nums, int target) {
        // Write your solution here
        
    }
}`;